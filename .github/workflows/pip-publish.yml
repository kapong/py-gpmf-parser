name: Pip

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest] # windows-latest, macos-latest,
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    runs-on: ${{ matrix.platform }}

    env:  # Set compilers here
      CC: ${{ matrix.platform == 'macos-latest' && 'clang' || 'gcc' }}
      CXX: ${{ matrix.platform == 'macos-latest' && 'clang++' || 'g++' }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Add requirements
      run: python -m pip install --upgrade wheel setuptools
    - name: Build and install
      run: pip install --verbose .

  build-mingw64:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-python-pip
          mingw-w64-x86_64-python-wheel
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Install pybind11
      run: pip install pybind11
    - name: Build and install
      run: pip install --no-build-isolation .

  publish:
    needs: [build, build-mingw64]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - uses: actions/setup-python@v4
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build distribution
      run: python setup.py sdist bdist_wheel
    - name: Publish to PyPI
      run: twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}